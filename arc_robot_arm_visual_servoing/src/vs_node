#!/usr/bin/env python3

import rospy
import sys
import cv2
import numpy as np

from sensor_msgs.msg import JointState 
from geometry_msgs.msg import Pose, PoseStamped

from depth_image_processing import DepthImageProcessing

class VisualServoing:
	'''VisualServoing
	Implements position based visual servoing using depth image	
	'''

	def __init__(self):
		move_to_pose_topic = "/move_to_pose"
		move_to_joint_state_topic = "/move_to_joint_state"

		self.joint_names = ['Rev1','Rev2','Rev3','Rev4']

		self.pose_pub = rospy.Publisher(move_to_pose_topic, PoseStamped, queue_size=1000)
		self.joint_state_pub = rospy.Publisher(move_to_joint_state_topic, JointState, queue_size=1000)

	def wait_for_kinematics(self):
		r = rospy.Rate(10)
		while(self.pose_pub.get_num_connections() == 0):
			print("Waiting for move_to_pose to get setup")
			r.sleep()

		while(self.joint_state_pub.get_num_connections() == 0):
			print("Waiting for move_to_joint_state to get setup")
			r.sleep()

		rospy.sleep(2)

	def move_to_scan_pose(self):

		SCAN_JOINT_STATE = [-0.0169296936004711, 0.29984756294442627, 1.0763445405577863, -0.1696460018521434]
		joint_state = JointState()
		joint_state.position = SCAN_JOINT_STATE 
		joint_state.name = self.joint_names 

		self.joint_state_pub.publish(joint_state)
		rospy.sleep(5)

	def move_to_pose(self, pose):
		self.pose_pub.publish(pose)
		rospy.sleep(5)

if __name__ == '__main__':
	rospy.init_node('vs_node')

	vs = VisualServoing()
	depth_proc = DepthImageProcessing()

	vs.wait_for_kinematics()
	
	vs.move_to_scan_pose()
	while not rospy.is_shutdown():
		target_coord = depth_proc.get_target_coord()	
		if(target_coord is not None):
			print(target_coord)
			vs.move_to_pose(target_coord)	
			break
		r.sleep()
	rospy.spin()
